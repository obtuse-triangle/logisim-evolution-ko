#
# OptionsFrame.java
#
logFrameTitle = Logisim-evolution: Chronogram %s of %s
logFrameMenuItem = %s: Chronogram
closeButton = Close Window
startChronogram = Start Chronogram
addRemoveSignals = Add or Remove Signals
#
# SelectionPanel.java
#
selectionTab = Signals
selectionHelp = Select signals to view.
selectionDesc = Drag signals to select or rearrange.
exploreLabel = Signals available in circuit:
listLabel = Signals to be viewed:
#
# TablePanel.java
#
tableTab = 테이블
tableHelp = 최근 값 로그 보기
tableEmptyMessage = Selection is empty.
#
# FilePanel.java
#
fileTab = 파일
fileHelp = Configure file output.
fileEnabled = 파일 출력 활성화됨
fileDisabled = 파일 출력 비활성화됨.
fileEnableButton = 활성화
fileDisableButton = 비활성화
fileLabel = 파일:
fileSelectButton = 선택...
fileHeaderCheck = Include Header Line
fileCannotWriteTitle = File Not Available
fileCannotWriteMessage = You do not have permission to write to "%s."
fileExistsTitle = 파일이 이미 있습니다.
fileExistsMessage = 파일 "%s" 이 이미 있습니다.
fileOverwriteOption = 덮어쓰기
fileAppendOption = 추가
fileCancelOption = 취소
#
# Time simulation
#
timeSelectionEnable = Enable time selection
timeSelectionClock = Choose your clock:
timeSelectionFrequency = 주파수:
#
# OptionsPanel.java
#
optionsTab = 옵션
optionsHelp = Configure chronogram signals, mode, and timing
selectionLabel = Signals and Formats
modeLabel =  Logging Mode
timingLabel = Timing Options
historyLabel = 기록
historyUnlimited = Store unlimited history
historyLimit = Number of recent values to store:
timeScale = Time scale:
gateDelay = Gate delay:
cycleLength = Clock cycle: %s ticks
nsFormat = %s ns
usFormat = %s \u00b5s
msFormat = %s ms
sFormat = %s s
perSecond = 매 초마다
perTick = 매 틱마다
stepTime = Stop-motion 모드
stepCoarse = Coarse-grained summary
stepCoarseDescription = Data is captured only when all signals have stabilized, ignoring any transient signal fluctuations that may happen during propagation. Each captured value is recorded as if it were held stable for %s.
fineDetail = Capture fine-grained details
stepFineDescription = Data is captured whenever any signal value changes, including any transient signal fluctuations that may happen during propagation. Transient fluctuations are recorded as if the gate delay were %s, and stable signals are recorded as if they were held stable for %s.
realTime = Continuous real-time mode
realCoarse = Coarse-grained summary
realCoarseDescription = Data is captured continuously, whenever the simulator is enabled, but transient signal fluctuations are ignored. Each second of real time is recorded as %s of simulated circuit time.
realFine = Fine-grained details
realFineDescription = Data is captured continuously, whenever the simulator is enabled, includin transient signal fluctuations. Each second of real time is recorded as %s of simulated circuit time.
clockTime = Clocked 모드
clockCoarse = Coarse-grained summary 
clockCoarseDescriptionDual = Data is captured at each clock transition, ignoring any transient fluctuations that may happen between transitions or during propagation. Each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionRising = Data is captured at each rising clock transition, ignoring any transient fluctuations that may happen between transitions or during propagation. Each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionFalling = Data is captured at each falling clock transition, ignoring any transient fluctuations that may happen between transitions or during propagation. Each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionHigh = Data is captured continuously only when the clock is high, ignoring any transient signal fluctuations that may happen during propagation or while the clock is low. Changes when the clock is high are recorded as if the gate delay were %s, and each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionLow = Data is captured continuously only when the clock is low, ignoring any transient signal fluctuations that may happen during propagation or while the clock is high. Changes when the clock is low are recorded as if the gate delay were %s, and each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockFine = Fine-grained details
clockFineDescription = Data is captured whenever any signal value changes, including any transient signal fluctuations that may happen during propagation. Transient fluctuations are recorded as if the gate delay were %s, and each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockSourceLabel = Clock Source:
clockSourceNone = n/a
selectClockDriverMessage = This feature requires a clock component, but none were found within the circuit. Either add a clock component to the circuit, or select one of the inputs below to serve as a clock.
selectClockObserverMessage = Select a clock or signal to use as the primary clock.
selectClockMissingMessage = This mode requires a clock component, but none were found within the circuit. Either add a clock component to the circuit, or select one of the signals below to serve as a clock.
selectClockMultipleMessage = The circuit contains multiple clocks. Select one of the clocks or signals below to use as the primary clock.
clockDisciplineLabel = Clock Discipline:
clockDisciplineRising = capture on rising edge
clockDisciplineFalling = capture on falling edge
clockDisciplineDual = capture on both edges
clockDisciplineHigh = capture during clock high
clockDisciplineLow = capture during clock low
