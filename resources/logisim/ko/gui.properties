#
# gui/AttributeTable.java
#
attributeDialogTitle = 값 선택
changeAttributeAction = 속성 변경
changeCircuitAttrAction = 회로 변경
changeVhdlAttrAction = Change VHDL
attributeChangeInvalidError = Attribute unchanged because request is invalid
attributeChangeInvalidTitle = 올바르지 않은 값
cannotModifyCircuitError = 이 회로는 수정할 수 없습니다.
cannotModifyVhdlError = This VHDL cannot be modified.
#
# gui/Canvas.java
#
canvasWidthError = Incompatible widths
canvasOscillationError = Oscillation apparent
canvasExceptionError = Simulation halted by internal error
#
# gui/Frame.java
#
titleCircFileKnown = Logisim-evolution: %s of %s
titleFileKnown = Logisim-evolution: %s
confirmDiscardMessage = %s : 저장하지 않은 변경사항이 있습니다. 
confirmCloseTitle = 닫으시겠습니까?
saveOption = 저장
discardOption = 변경사항 취소
cancelOption = 취소
#
# gui/ExportImage.java
#
labelCircuits = 회로:
labelImageFormat = 이미지 포맷:
labelScale = 확대 배율:
labelPrinterView = 프린터 미리보기:
exportEmptyCircuitsTitle = 내보낼 수 없음
exportEmptyCircuitsMessage = 회로가 비어있지 않아야 내보낼 수 있습니다.
exportImageSelect = 이미지 내보내기
exportImageDirectorySelect = 내보내기 디렉터리 선택
exportImageFileSelect = 내보내기 파일 선택
exportImageButton = 내보내기
exportPngFilter = PNG 파일 (*.png)
exportJpgFilter = JPEG 파일 (*.jpeg, *.jpg)
exportNewDirectoryErrorTitle = 디렉터리를 만들 수 없습니다.
exportNewDirectoryErrorMessage = 디렉터리를 만들 수 없습니다.
couldNotCreateImage = 이미지를 만들 수 없습니다.
couldNotCreateFile = 파일을 만들 수 없습니다.
confirmOverwriteMessage = 파일이 이미 존재합니다. 덮어쓰시겠습니까?
confirmOverwriteTitle = 덮어쓰기 확인
exportImageProgress = Computing Image...
#
# gui/Print.java
#
labelRotateToFit = 회전해서 종이에 맞추기:
labelHeader = 헤더:
printEmptyCircuitsTitle = 프린트할 수 없음
printEmptyCircuitsMessage = 회로가 비어있지 않아야 인쇄할 수 있습니다.
printParmsTitle = 인쇄 설정
printError = 프린팅중 오류 발생: %s
printErrorTitle = 프린팅중 오류 발생
#
# gui/SelectionActions.java
#
dropComponentAction = 컴포넌트 삭제
dropComponentsAction = 컴포넌트(들) 삭제
anchorComponentAction = Anchor Component
anchorComponentsAction = Anchor Components
moveSelectionAction = 선택 이동
deleteSelectionAction = 선택 삭제
duplicateSelectionAction = 선택 복제
cutSelectionAction = 선택 잘라내기
copySelectionAction = 선택 복사
pasteComponentsAction = 컴포넌트(들) 붙여넣기
pasteAsCircuitAction = 회로로 붙여넣기
duplicateCircuitAction = 회로 복제하기
pasteCircuitAction = 회로 붙여넣기
dragDropCircuitAction = 회로 삽입하기
duplicateVhdlAction = VHDL 엔티티 복제
pasteVhdlAction = VHDL 엔티티 붙여넣기
dragDropVhdVhdlion = VHDL 엔티티 삽입
pasteCloneQuery = The clipboard includes "%s." The project doesn't include it, but it has another of the same name.
pasteCloneTitle = Component
pasteCloneReplace = 교체
pasteCloneIgnore = 무시
pasteCloneCancel = 취소
pasteDropMessage = Some clipboard components were not pasted because the project libraries do not support them:
pasteDropTitle = Components Not Pasted
#
# tools/SelectionAttributeChange.java
#
selectionAttributeAction = Change Selection Attribute
#
# tools/ToolActions.java
#
changeToolAttrAction = Change Tool Attribute
#
# gui/main/StatisticsDialog.java
#
statsDialogTitle = Logisim-evolution: %s Statistics
statsCloseButton = 닫기
statsSimpleCountColumn = Simple
statsUniqueCountColumn = Unique
statsRecursiveCountColumn = Recursive
statsComponentColumn = Component
statsLibraryColumn = Library
statsTotalWithout = TOTAL (without project's subcircuits)
statsTotalWith = TOTAL (with subcircuits)
#
# gui/main/ExplorerToolbarModel.java
#
projectViewToolboxTip = Show circuits, VHDL, and libraries in explorer pane
projectViewSimulationTip = Show simulation hierarchy in explorer pane
projectEditLayoutTip = Edit viewed circuit's design
projectEditAppearanceTip = Edit viewed circuit's appearance
#
# gui/main/ToolboxToolbarModel.java
#
projectAddToolTip = Add new circuit or VHDL entity
projectMoveToolDownTip = Move viewed circuit or VHDL entity down list
projectMoveToolUpTip = Move viewed circuit or VHDL entity up list
projectRemoveToolTip = Remove viewed circuit or VHDL entity
projectToggleAppearanceTip = Switch between circuit design and appearance editing
#
# gui/main/SimulationToolbarModel.java
#
simulateRunTip = Run simulator continuously
simulateStopTip = 시뮬레이터 중지
simulateStepTip = Step simulator once
simulateEnableTicksTip = Enable clock ticks
simulateDisableTicksTip = Disable clock ticks
simulateTickHalfTip = Tick clock one half cycle
simulateTickFullTip = Tick clock one full cycle
addCircuitState = Start new simulation of this componennt
deleteCircuitState = 이 시뮬레이션 끝내기
#
# gui/TickRate.java
#
tickRateHz = %s Hz
tickRateKHz = %s kHz
#
# gui/ZoomControl.java
#
zoomShowGrid = Toggle whether grid is shown
#
# gui/appear/RevertAppearanceAction
#
revertAppearanceAction = Revert Appearance
#
# attribute table models
#
vhdlAttrTitle = VHDL: %s
circuitAttrTitle = 회로: %s
toolAttrTitle = 도구: %s
selectionOne = %s
selectionMultiple = %s \u00d7 %s
selectionVarious = Various \u00d7 %s
libraryAttrTitle = 라이브러리: %s
libraryAttrTypeTitle = 라이브러리 Type
libraryAttrBuiltinType = Built-in
libraryAttrLogisimType = Logisim-evolution
libraryAttrJarType = JAR
libraryAttrTopType = 프로젝트
libraryAttrPathTitle = 파일
projectName = 프로젝트 이름
libraryName = 라이브러리 이름
#
# gui/appear/ShowStateDialog.java
#
showStateDialogTitle = State for %s
showStateDialogOkButton = OK
showStateDialogCancelButton = 취소
showStateDialogNodeTitle = State for %s
showStateDialogEmptyTitle = Appearance Error
showStateDialogEmptyMessage = Circuit %s has no state (registers, LEDs, etc.) that can be shown.

dynamicConditionDialogTitle = Dynamic Visibility Condition for %s
dynamicConditionDialogOkButton = OK
dynamicConditionDialogCancelButton = Cancel
dynamicConditionDialogEnableTitle = Shape Visibility
dynamicConditionDialogVisibleAlways = Always Visible
dynamicConditionDialogVisibleDynamic = Depends on Circuit State
dynamicConditionDialogNodeTitle = State
dynamicConditionDialogOperationTitle = Operation
dynamicConditionDialogValueTitle = Value 
dynamicConditionDialogValueHint = Decimal, hex (0x), or binary (0b)
dynamicConditionDialogStatusTitle = 상태
dynamicConditionDialogStatusNoErrors = no error bits
dynamicConditionDialogStatusSomeErrors = some error bits
dynamicConditionDialogStatusAllErrors = all error bits
dynamicConditionDialogStatusNoFloating = no floating bits
dynamicConditionDialogStatusSomeFloating = some floating bits
dynamicConditionDialogStatusAllFloating = all floating bits
dynamicConditionDialogStatusNoDefined = no defined bits
dynamicConditionDialogStatusSomeDefined = some defined bits
dynamicConditionDialogStatusAllDefined = all defined bits
dynamicConditionDialogEmptyTitle = Appearance Error
dynamicConditionDialogEmptyMessage = Circuit %s has no state (registers, LEDs, etc.) that can be used for dynamic visibility condition.

#
# gui/generic/RegTabContent.java
#
registerTabNameTitle = 이름
registerTabValueTitle = 값

simulationToolTip = View circuit state of this instance of %s
activeSimulations = 시뮬레이션 활성화
